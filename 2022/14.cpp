#include <iostream>
#include <string>
#include <vector>
#include <utility>
#include <limits>
#include <map>

#include <catch2/catch_test_macros.hpp>

using namespace std;

typedef pair<int, int> position;

const vector<vector<position>> inputTestdata = {
    {{498, 4}, {498, 6}, {496, 6}},
    {{503, 4}, {502, 4}, {502, 9}, {494, 9}}};

const vector<vector<position>> inputData = {
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{520, 82}, {524, 82}},
    {{496, 164}, {500, 164}},
    {{505, 162}, {509, 162}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{526, 94}, {530, 94}},
    {{513, 116}, {517, 116}},
    {{493, 162}, {497, 162}},
    {{505, 123}, {505, 125}, {501, 125}, {501, 130}, {511, 130}, {511, 125}, {508, 125}, {508, 123}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{507, 149}, {507, 151}, {502, 151}, {502, 155}, {516, 155}, {516, 151}, {511, 151}, {511, 149}},
    {{539, 66}, {544, 66}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{517, 85}, {521, 85}},
    {{523, 85}, {527, 85}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{499, 158}, {503, 158}},
    {{502, 160}, {506, 160}},
    {{508, 164}, {512, 164}},
    {{526, 88}, {530, 88}},
    {{505, 123}, {505, 125}, {501, 125}, {501, 130}, {511, 130}, {511, 125}, {508, 125}, {508, 123}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{507, 149}, {507, 151}, {502, 151}, {502, 155}, {516, 155}, {516, 151}, {511, 151}, {511, 149}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{514, 42}, {514, 46}, {508, 46}, {508, 51}, {525, 51}, {525, 46}, {517, 46}, {517, 42}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{504, 107}, {504, 99}, {504, 107}, {506, 107}, {506, 97}, {506, 107}, {508, 107}, {508, 103}, {508, 107}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{518, 66}, {523, 66}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{504, 107}, {504, 99}, {504, 107}, {506, 107}, {506, 97}, {506, 107}, {508, 107}, {508, 103}, {508, 107}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{502, 164}, {506, 164}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{524, 60}, {529, 60}},
    {{507, 149}, {507, 151}, {502, 151}, {502, 155}, {516, 155}, {516, 151}, {511, 151}, {511, 149}},
    {{510, 113}, {514, 113}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{514, 94}, {518, 94}},
    {{511, 91}, {515, 91}},
    {{504, 107}, {504, 99}, {504, 107}, {506, 107}, {506, 97}, {506, 107}, {508, 107}, {508, 103}, {508, 107}},
    {{490, 164}, {494, 164}},
    {{514, 42}, {514, 46}, {508, 46}, {508, 51}, {525, 51}, {525, 46}, {517, 46}, {517, 42}},
    {{523, 91}, {527, 91}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{520, 57}, {525, 57}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{511, 145}, {511, 146}, {517, 146}, {517, 145}},
    {{521, 63}, {526, 63}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{503, 39}, {514, 39}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{517, 60}, {522, 60}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{504, 107}, {504, 99}, {504, 107}, {506, 107}, {506, 97}, {506, 107}, {508, 107}, {508, 103}, {508, 107}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{505, 123}, {505, 125}, {501, 125}, {501, 130}, {511, 130}, {511, 125}, {508, 125}, {508, 123}},
    {{528, 63}, {533, 63}},
    {{507, 149}, {507, 151}, {502, 151}, {502, 155}, {516, 155}, {516, 151}, {511, 151}, {511, 149}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{507, 149}, {507, 151}, {502, 151}, {502, 155}, {516, 155}, {516, 151}, {511, 151}, {511, 149}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{514, 42}, {514, 46}, {508, 46}, {508, 51}, {525, 51}, {525, 46}, {517, 46}, {517, 42}},
    {{507, 149}, {507, 151}, {502, 151}, {502, 155}, {516, 155}, {516, 151}, {511, 151}, {511, 149}},
    {{491, 136}, {491, 138}, {483, 138}, {483, 141}, {499, 141}, {499, 138}, {496, 138}, {496, 136}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{494, 133}, {503, 133}, {503, 132}},
    {{531, 60}, {536, 60}},
    {{505, 123}, {505, 125}, {501, 125}, {501, 130}, {511, 130}, {511, 125}, {508, 125}, {508, 123}},
    {{523, 54}, {528, 54}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{517, 91}, {521, 91}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{504, 107}, {504, 99}, {504, 107}, {506, 107}, {506, 97}, {506, 107}, {508, 107}, {508, 103}, {508, 107}},
    {{514, 63}, {519, 63}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{514, 42}, {514, 46}, {508, 46}, {508, 51}, {525, 51}, {525, 46}, {517, 46}, {517, 42}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{511, 79}, {511, 77}, {511, 79}, {513, 79}, {513, 70}, {513, 79}, {515, 79}, {515, 73}, {515, 79}, {517, 79}, {517, 77}, {517, 79}, {519, 79}, {519, 77}, {519, 79}, {521, 79}, {521, 76}, {521, 79}},
    {{504, 113}, {508, 113}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{491, 136}, {491, 138}, {483, 138}, {483, 141}, {499, 141}, {499, 138}, {496, 138}, {496, 136}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{501, 116}, {505, 116}},
    {{511, 145}, {511, 146}, {517, 146}, {517, 145}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{532, 94}, {536, 94}},
    {{491, 136}, {491, 138}, {483, 138}, {483, 141}, {499, 141}, {499, 138}, {496, 138}, {496, 136}},
    {{499, 162}, {503, 162}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{520, 94}, {524, 94}},
    {{491, 119}, {491, 120}, {503, 120}, {503, 119}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{491, 119}, {491, 120}, {503, 120}, {503, 119}},
    {{504, 107}, {504, 99}, {504, 107}, {506, 107}, {506, 97}, {506, 107}, {508, 107}, {508, 103}, {508, 107}},
    {{529, 91}, {533, 91}},
    {{507, 110}, {511, 110}},
    {{494, 133}, {503, 133}, {503, 132}},
    {{491, 136}, {491, 138}, {483, 138}, {483, 141}, {499, 141}, {499, 138}, {496, 138}, {496, 136}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{511, 145}, {511, 146}, {517, 146}, {517, 145}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{514, 42}, {514, 46}, {508, 46}, {508, 51}, {525, 51}, {525, 46}, {517, 46}, {517, 42}},
    {{491, 119}, {491, 120}, {503, 120}, {503, 119}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{491, 136}, {491, 138}, {483, 138}, {483, 141}, {499, 141}, {499, 138}, {496, 138}, {496, 136}},
    {{496, 160}, {500, 160}},
    {{505, 123}, {505, 125}, {501, 125}, {501, 130}, {511, 130}, {511, 125}, {508, 125}, {508, 123}},
    {{527, 57}, {532, 57}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{508, 94}, {512, 94}},
    {{532, 66}, {537, 66}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{494, 23}, {494, 17}, {494, 23}, {496, 23}, {496, 20}, {496, 23}, {498, 23}, {498, 16}, {498, 23}, {500, 23}, {500, 18}, {500, 23}, {502, 23}, {502, 19}, {502, 23}, {504, 23}, {504, 18}, {504, 23}},
    {{520, 88}, {524, 88}},
    {{504, 107}, {504, 99}, {504, 107}, {506, 107}, {506, 97}, {506, 107}, {508, 107}, {508, 103}, {508, 107}},
    {{514, 88}, {518, 88}},
    {{514, 42}, {514, 46}, {508, 46}, {508, 51}, {525, 51}, {525, 46}, {517, 46}, {517, 42}},
    {{504, 107}, {504, 99}, {504, 107}, {506, 107}, {506, 97}, {506, 107}, {508, 107}, {508, 103}, {508, 107}},
    {{525, 66}, {530, 66}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{491, 136}, {491, 138}, {483, 138}, {483, 141}, {499, 141}, {499, 138}, {496, 138}, {496, 136}},
    {{535, 63}, {540, 63}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{505, 123}, {505, 125}, {501, 125}, {501, 130}, {511, 130}, {511, 125}, {508, 125}, {508, 123}},
    {{511, 66}, {516, 66}},
    {{491, 136}, {491, 138}, {483, 138}, {483, 141}, {499, 141}, {499, 138}, {496, 138}, {496, 136}},
    {{505, 123}, {505, 125}, {501, 125}, {501, 130}, {511, 130}, {511, 125}, {508, 125}, {508, 123}},
    {{514, 42}, {514, 46}, {508, 46}, {508, 51}, {525, 51}, {525, 46}, {517, 46}, {517, 42}},
    {{507, 116}, {511, 116}},
    {{496, 36}, {496, 34}, {496, 36}, {498, 36}, {498, 30}, {498, 36}, {500, 36}, {500, 31}, {500, 36}, {502, 36}, {502, 27}, {502, 36}, {504, 36}, {504, 29}, {504, 36}, {506, 36}, {506, 34}, {506, 36}, {508, 36}, {508, 34}, {508, 36}, {510, 36}, {510, 30}, {510, 36}, {512, 36}, {512, 30}, {512, 36}},
    {{507, 149}, {507, 151}, {502, 151}, {502, 155}, {516, 155}, {516, 151}, {511, 151}, {511, 149}}};

/*
class item
{
public:
    item(const string _input) : input(_input)
    {
    }

    long getResultA()
    {
        long resultA = 0;

        return resultA;
    }

    long getResultB()
    {
        long resultB = 0;

        return resultB;
    }

    string getString() { return input; }

private:
    string input;

    friend class RegolithReservoir;
};
*/

class RegolithReservoir
{
public:
    RegolithReservoir(const vector<vector<position>> _input) : input(_input)
    {
        cout << "Size of Input: " << input.size() << endl;

        // Find min/max values
        for (auto path : input)
            for (auto coord : path)
            {
                if (coord.first < mindistright)
                    mindistright = coord.first;
                if (coord.first > maxdistright)
                    maxdistright = coord.first;
                if (coord.second < mindistdown)
                    mindistdown = coord.second;
                if (coord.second > maxdistdown)
                    maxdistdown = coord.second;
            }

        // Print limits:
        cout << "Min(" << --mindistright << "/" << mindistdown << ") - Max(" << ++maxdistright << "/" << ++maxdistdown << ")" << endl;

        // Parse data
        for (auto path : input)
        {
            if (path.size() < 2)
                cout << "Path too short!" << endl;

            for (auto coord = path.begin(), coord2 = path.begin() + 1; coord2 != path.end(); ++coord, ++coord2)
            {
                // cout << "Draw line: (" << coord->first <<"/"<<coord->second<< ") - ("<< coord2->first<< "/"<< coord2->second<<")" << endl;
                if (coord->first == coord2->first)
                {
                    for (auto c = min(coord->second, coord2->second); c <= max(coord->second, coord2->second); ++c)
                    {
                        area[{coord->first, c}] = 1;
                    }
                }
                else if (coord->second == coord2->second)
                {
                    for (auto c = min(coord->first, coord2->first); c <= max(coord->first, coord2->first); ++c)
                    {
                        area[{c, coord->second}] = 1;
                    }
                }
                else
                {
                    cout << "Both coordinates are different, that's unexpected" << endl;
                }
            }
        }
    }

    void printfield()
    {
        for (int d = mindistdown; d <= maxdistdown; ++d)
        {
            for (int r = mindistright; r <= maxdistright; ++r)
            {
                switch (area[{r, d}])
                {
                case 0:
                    cout << ' ';
                    break;
                case 1:
                    cout << '#';
                    break;
                case 2:
                    cout << "o";
                    break;
                default:
                    cout << "Didn't expect this: " << area[{r, d}] << endl;
                    break;
                }
            }
            cout << endl;
        }
    }

    bool addSand()
    {
        // Return: true: Everything is okay
        //         false: Down to the abyss
        position sand{500, 0};
        bool moving = true;

        while (moving)
        {
            if (0 == area[{sand.first, sand.second + 1}])
                ++sand.second;
            else if (0 == area[{sand.first - 1, sand.second + 1}])
            {
                --sand.first;
                ++sand.second;
            }
            else if (0 == area[{sand.first + 1, sand.second + 1}])
            {
                ++sand.first;
                ++sand.second;
            }
            else{
                moving = false;
            }

            if ( sand.second == maxdistdown) // Reached the Abyss
                moving = false;
        }

        area[sand] = 2;
        //printfield();

        return (sand.second != maxdistdown);
    }

    long getResultA()
    {
        long resultA = 0;
        // for (auto e : items)
        //     resultA += e.getResultA();

        while ( addSand() )
            ++resultA;

        cout << "result A: " << resultA << endl;
        return resultA;
    }
    long getResultB()
    {
        long resultB = 0;
        // for (auto e : items)
        //     resultB += e.getResultB();

        cout << "result B: " << resultB << endl;
        return resultB;
    }

private:
    const vector<vector<position>> input;
    int maxdistright = numeric_limits<int>::min(),
        mindistright = numeric_limits<int>::max(),
        maxdistdown = numeric_limits<int>::min(),
        mindistdown = 0;
    // vector<item> items;
    map<position, int> area; // 1 Rock, 2 Sand
};

TEST_CASE("Testdata")
{
    RegolithReservoir problemData(inputTestdata);
    REQUIRE(24 == problemData.getResultA());
    REQUIRE(0 == problemData.getResultB());
}

TEST_CASE("Problem")
{
    RegolithReservoir problemData(inputData);
    REQUIRE(614 == problemData.getResultA());
    REQUIRE(0 == problemData.getResultB());
}