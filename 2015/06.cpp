#include <iostream>
#include <cstdint>
#include <string>

using namespace std;

enum action { toggle, turnoff, turnon };

int main(int, char**) {
    uint16_t input[][5] = {
        {toggle, 461,550 , 564,900,},
        {turnoff, 370,39 , 425,839},
        {turnoff, 464,858 , 833,915},
        {turnoff, 812,389 , 865,874},
        {turnon, 599,989 , 806,993},
        {turnon, 376,415 , 768,548},
        {turnon, 606,361 , 892,600},
        {turnoff, 448,208 , 645,684},
        {toggle, 50,472 , 452,788},
        {toggle, 205,417 , 703,826},
        {toggle, 533,331 , 906,873},
        {toggle, 857,493 , 989,970},
        {turnoff, 631,950 , 894,975},
        {turnoff, 387,19 , 720,700},
        {turnoff, 511,843 , 581,945},
        {toggle, 514,557 , 662,883},
        {turnoff, 269,809 , 876,847},
        {turnoff, 149,517 , 716,777},
        {turnoff, 994,939 , 998,988},
        {toggle, 467,662 , 555,957},
        {turnon, 952,417 , 954,845},
        {turnon, 565,226 , 944,880},
        {turnon, 214,319 , 805,722},
        {toggle, 532,276 , 636,847},
        {toggle, 619,80 , 689,507},
        {turnon, 390,706 , 884,722},
        {toggle, 17,634 , 537,766},
        {toggle, 706,440 , 834,441},
        {toggle, 318,207 , 499,530},
        {toggle, 698,185 , 830,343},
        {toggle, 566,679 , 744,716},
        {toggle, 347,482 , 959,482},
        {toggle, 39,799 , 981,872},
        {turnon, 583,543 , 846,710},
        {turnoff, 367,664 , 595,872},
        {turnon, 805,439 , 964,995},
        {toggle, 209,584 , 513,802},
        {turnoff, 106,497 , 266,770},
        {turnon, 975,2 , 984,623},
        {turnoff, 316,684 , 369,876},
        {turnoff, 30,309 , 259,554},
        {turnoff, 399,680 , 861,942},
        {toggle, 227,740 , 850,829},
        {turnon, 386,603 , 552,879},
        {turnoff, 703,795 , 791,963},
        {turnoff, 573,803 , 996,878},
        {turnoff, 993,939 , 997,951},
        {turnon, 809,221 , 869,723},
        {turnoff, 38,720 , 682,751},
        {turnoff, 318,732 , 720,976},
        {toggle, 88,459 , 392,654},
        {turnoff, 865,654 , 911,956},
        {toggle, 264,284 , 857,956},
        {turnoff, 281,776 , 610,797},
        {toggle, 492,660 , 647,910},
        {turnoff, 879,703 , 925,981},
        {turnoff, 772,414 , 974,518},
        {turnon, 694,41 , 755,96},
        {turnon, 452,406 , 885,881},
        {turnoff, 107,905 , 497,910},
        {turnoff, 647,222 , 910,532},
        {turnon, 679,40 , 845,358},
        {turnoff, 144,205 , 556,362},
        {turnon, 871,804 , 962,878},
        {turnon, 545,676 , 545,929},
        {turnoff, 316,716 , 413,941},
        {toggle, 488,826 , 755,971},
        {toggle, 957,832 , 976,992},
        {toggle, 857,770 , 905,964},
        {toggle, 319,198 , 787,673},
        {turnon, 832,813 , 863,844},
        {turnon, 818,296 , 818,681},
        {turnon, 71,699 , 91,960},
        {turnoff, 838,578 , 967,928},
        {toggle, 440,856 , 507,942},
        {toggle, 121,970 , 151,974},
        {toggle, 391,192 , 659,751},
        {turnon, 78,210 , 681,419},
        {turnon, 324,591 , 593,939},
        {toggle, 159,366 , 249,760},
        {turnoff, 617,167 , 954,601},
        {toggle, 484,607 , 733,657},
        {turnon, 587,96 , 888,819},
        {turnoff, 680,984 , 941,991},
        {turnon, 800,512 , 968,691},
        {turnoff, 123,588 , 853,603},
        {turnon, 1,862 , 507,912},
        {turnon, 699,839 , 973,878},
        {turnoff, 848,89 , 887,893},
        {toggle, 344,353 , 462,403},
        {turnon, 780,731 , 841,760},
        {toggle, 693,973 , 847,984},
        {toggle, 989,936 , 996,958},
        {toggle, 168,475 , 206,963},
        {turnon, 742,683 , 769,845},
        {toggle, 768,116 , 987,396},
        {turnon, 190,364 , 617,526},
        {turnoff, 470,266 , 530,839},
        {toggle, 122,497 , 969,645},
        {turnoff, 492,432 , 827,790},
        {turnon, 505,636 , 957,820},
        {turnon, 295,476 , 698,958},
        {toggle, 63,298 , 202,396},
        {turnon, 157,315 , 412,939},
        {turnoff, 69,789 , 134,837},
        {turnoff, 678,335 , 896,541},
        {toggle, 140,516 , 842,668},
        {turnoff, 697,585 , 712,668},
        {toggle, 507,832 , 578,949},
        {turnon, 678,279 , 886,621},
        {toggle, 449,744 , 826,910},
        {turnoff, 835,354 , 921,741},
        {toggle, 924,878 , 985,952},
        {turnon, 666,503 , 922,905},
        {turnon, 947,453 , 961,587},
        {toggle, 525,190 , 795,654},
        {turnoff, 62,320 , 896,362},
        {turnon, 21,458 , 972,536},
        {turnon, 446,429 , 821,970},
        {toggle, 376,423 , 805,455},
        {toggle, 494,896 , 715,937},
        {turnon, 583,270 , 667,482},
        {turnoff, 183,468 , 280,548},
        {toggle, 623,289 , 750,524},
        {turnon, 836,706 , 967,768},
        {turnon, 419,569 , 912,908},
        {turnon, 428,260 , 660,433},
        {turnoff, 683,627 , 916,816},
        {turnon, 447,973 , 866,980},
        {turnon, 688,607 , 938,990},
        {turnon, 245,187 , 597,405},
        {turnoff, 558,843 , 841,942},
        {turnoff, 325,666 , 713,834},
        {toggle, 672,606 , 814,935},
        {turnoff, 161,812 , 490,954},
        {turnon, 950,362 , 985,898},
        {turnon, 143,22 , 205,821},
        {turnon, 89,762 , 607,790},
        {toggle, 234,245 , 827,303},
        {turnon, 65,599 , 764,997},
        {turnon, 232,466 , 965,695},
        {turnon, 739,122 , 975,590},
        {turnoff, 206,112 , 940,558},
        {toggle, 690,365 , 988,552},
        {turnon, 907,438 , 977,691},
        {turnoff, 838,809 , 944,869},
        {turnon, 222,12 , 541,832},
        {toggle, 337,66 , 669,812},
        {turnon, 732,821 , 897,912},
        {toggle, 182,862 , 638,996},
        {turnon, 955,808 , 983,847},
        {toggle, 346,227 , 841,696},
        {turnon, 983,270 , 989,756},
        {turnoff, 874,849 , 876,905},
        {turnoff, 7,760 , 678,795},
        {toggle, 973,977 , 995,983},
        {turnoff, 911,961 , 914,976},
        {turnon, 913,557 , 952,722},
        {turnoff, 607,933 , 939,999},
        {turnon, 226,604 , 517,622},
        {turnoff, 3,564 , 344,842},
        {toggle, 340,578 , 428,610},
        {turnon, 248,916 , 687,925},
        {toggle, 650,185 , 955,965},
        {toggle, 831,359 , 933,536},
        {turnoff, 544,614 , 896,953},
        {toggle, 648,939 , 975,997},
        {turnon, 464,269 , 710,521},
        {turnoff, 643,149 , 791,320},
        {turnoff, 875,549 , 972,643},
        {turnoff, 953,969 , 971,972},
        {turnoff, 236,474 , 772,591},
        {toggle, 313,212 , 489,723},
        {toggle, 896,829 , 897,837},
        {toggle, 544,449 , 995,905},
        {turnoff, 278,645 , 977,876},
        {turnoff, 887,947 , 946,977},
        {turnon, 342,861 , 725,935},
        {turnon, 636,316 , 692,513},
        {toggle, 857,470 , 950,528},
        {turnoff, 736,196 , 826,889},
        {turnon, 17,878 , 850,987},
        {turnon, 142,968 , 169,987},
        {turnon, 46,470 , 912,853},
        {turnon, 182,252 , 279,941},
        {toggle, 261,143 , 969,657},
        {turnoff, 69,600 , 518,710},
        {turnon, 372,379 , 779,386},
        {toggle, 867,391 , 911,601},
        {turnoff, 174,287 , 900,536},
        {toggle, 951,842 , 993,963},
        {turnoff, 626,733 , 985,827},
        {toggle, 622,70 , 666,291},
        {turnoff, 980,671 , 985,835},
        {turnoff, 477,63 , 910,72},
        {turnoff, 779,39 , 940,142},
        {turnon, 986,570 , 997,638},
        {toggle, 842,805 , 943,985},
        {turnoff, 890,886 , 976,927},
        {turnoff, 893,172 , 897,619},
        {turnoff, 198,780 , 835,826},
        {toggle, 202,209 , 219,291},
        {turnoff, 193,52 , 833,283},
        {toggle, 414,427 , 987,972},
        {turnon, 375,231 , 668,236},
        {turnoff, 646,598 , 869,663},
        {toggle, 271,462 , 414,650},
        {turnoff, 679,121 , 845,467},
        {toggle, 76,847 , 504,904},
        {turnoff, 15,617 , 509,810},
        {toggle, 248,105 , 312,451},
        {turnoff, 126,546 , 922,879},
        {turnon, 531,831 , 903,872},
        {toggle, 602,431 , 892,792},
        {turnoff, 795,223 , 892,623},
        {toggle, 167,721 , 533,929},
        {toggle, 813,251 , 998,484},
        {toggle, 64,640 , 752,942},
        {turnon, 155,955 , 892,985},
        {turnon, 251,329 , 996,497},
        {turnoff, 341,716 , 462,994},
        {toggle, 760,127 , 829,189},
        {turnon, 86,413 , 408,518},
        {toggle, 340,102 , 918,558},
        {turnoff, 441,642 , 751,889},
        {turnon, 785,292 , 845,325},
        {turnoff, 123,389 , 725,828},
        {turnon, 905,73 , 983,270},
        {turnoff, 807,86 , 879,276},
        {toggle, 500,866 , 864,916},
        {turnon, 809,366 , 828,534},
        {toggle, 219,356 , 720,617},
        {turnoff, 320,964 , 769,990},
        {turnoff, 903,167 , 936,631},
        {toggle, 300,137 , 333,693},
        {toggle, 5,675 , 755,848},
        {turnoff, 852,235 , 946,783},
        {toggle, 355,556 , 941,664},
        {turnon, 810,830 , 867,891},
        {turnoff, 509,869 , 667,903},
        {toggle, 769,400 , 873,892},
        {turnon, 553,614 , 810,729},
        {turnon, 179,873 , 589,962},
        {turnoff, 466,866 , 768,926},
        {toggle, 143,943 , 465,984},
        {toggle, 182,380 , 569,552},
        {turnoff, 735,808 , 917,910},
        {turnon, 731,802 , 910,847},
        {turnoff, 522,74 , 731,485},
        {turnon, 444,127 , 566,996},
        {turnoff, 232,962 , 893,979},
        {turnoff, 231,492 , 790,976},
        {turnon, 874,567 , 943,684},
        {toggle, 911,840 , 990,932},
        {toggle, 547,895 , 667,935},
        {turnoff, 93,294 , 648,636},
        {turnoff, 190,902 , 532,970},
        {turnoff, 451,530 , 704,613},
        {toggle, 936,774 , 937,775},
        {turnoff, 116,843 , 533,934},
        {turnon, 950,906 , 986,993},
        {turnon, 910,51 , 945,989},
        {turnon, 986,498 , 994,945},
        {turnoff, 125,324 , 433,704},
        {turnoff, 60,313 , 75,728},
        {turnon, 899,494 , 940,947},
        {toggle, 832,316 , 971,817},
        {toggle, 994,983 , 998,984},
        {toggle, 23,353 , 917,845},
        {toggle, 174,799 , 658,859},
        {turnoff, 490,878 , 534,887},
        {turnoff, 623,963 , 917,975},
        {toggle, 721,333 , 816,975},
        {toggle, 589,687 , 890,921},
        {turnon, 936,388 , 948,560},
        {turnoff, 485,17 , 655,610},
        {turnon, 435,158 , 689,495},
        {turnon, 192,934 , 734,936},
        {turnoff, 299,723 , 622,847},
        {toggle, 484,160 , 812,942},
        {turnoff, 245,754 , 818,851},
        {turnon, 298,419 , 824,634},
        {toggle, 868,687 , 969,760},
        {toggle, 131,250 , 685,426},
        {turnoff, 201,954 , 997,983},
        {turnon, 353,910 , 832,961},
        {turnoff, 518,781 , 645,875},
        {turnoff, 866,97 , 924,784},
        {toggle, 836,599 , 857,767},
        {turnon, 80,957 , 776,968},
        {toggle, 277,130 , 513,244},
        {turnoff, 62,266 , 854,434},
        {turnon, 792,764 , 872,842},
        {turnoff, 160,949 , 273,989},
        {turnoff, 664,203 , 694,754},
        {toggle, 491,615 , 998,836},
        {turnoff, 210,146 , 221,482},
        {turnoff, 209,780 , 572,894},
        {turnon, 766,112 , 792,868},
        {turnon, 222,12 , 856,241},
    };
    int resultA = 0;
    int resultB = 0;

    bool lightsA[1000][1000] = {false};
    uint32_t lightsB[1000][1000] = {0};

    for ( auto c : input )
    {
        for ( uint16_t i=c[1]; i<=c[3]; ++i)
        {
            for ( uint16_t j=c[2]; j<=c[4]; ++j)
            {
                switch (c[0])
                {
                case toggle:
                    lightsA[i][j] = !lightsA[i][j];
                    lightsB[i][j]+=2;
                    break;
                case turnon:
                    lightsA[i][j] = true;
                    ++lightsB[i][j];
                    break;
                case turnoff:
                    lightsA[i][j] = false;
                    if ( 0<lightsB[i][j]) --lightsB[i][j];
                    break;
                default:
                    cout << ":-o" << endl;
                    break;
                }
            }
        }    
    }

    for ( uint16_t i=0; i<1000; ++i)
    {
        for ( uint16_t j=0; j<1000; ++j)
        {
            if ( lightsA[i][j] )
                ++resultA;

            resultB += lightsB[i][j];
        }
    }

    cout << "Result A: " << resultA << endl;
    cout << "Result B: " << resultB << endl;

    return 0;
}
